# This is a basic workflow to help you get started with Actions

name: NextBuild

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
#     tags:
#       - "*.*.*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  next-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Yarn
      uses: borales/actions-yarn@v3.0.0
      with:
        cmd: 'install'
    - name: Build Yarn
      uses: borales/actions-yarn@v3.0.0
      with:
        cmd: 'build'

    - name: Export Yarn
      uses: borales/actions-yarn@v3.0.0
      with:
        cmd: 'export'

    - name: MkDir for deploy files
      run: mkdir ${{ github.workspace }}/deploy_files
  
    - name: Zip Build Folder for Release phase
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r deploy_files/build.zip out

    - name: List Frontend Files
      run: ls ${{ github.workspace }}
  
    - name: Upload Zip File to artifacts
      uses: actions/upload-artifact@v1
      with:
        name: build.zip
        path: ${{ github.workspace }}/deploy_files/build.zip
  
#     - name: Release
#       uses: softprops/action-gh-release@v1
#       if: startsWith(github.ref, 'refs/tags/')
#       with:
#           files: ${{ github.workspace }}/deploy_files/build.zip
  
#     - name: FTP Deploy Front End
#       uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
#       with:
#         ftp_host: ${{secrets.FTP_HOST}}
#         ftp_username: ${{secrets.FTP_USERNAME}}
#         ftp_password: ${{secrets.FTP_PASSWORD}}
#         local_source_dir: ${{ github.workspace }}/deploy_files
#         dist_target_dir: "/public_html"
#         delete: "false"
#         exclude: ""

#     - name: Deploy On Server
#       uses: garygrossgarten/github-action-ssh@release
#       with:
#         command: |
#           rm -rf ${{secrets.DOMAIN_ROOT_PATH}}/public_html/vue/*
#           unzip ${{secrets.DOMAIN_ROOT_PATH}}/public_html/build.zip -d ${{secrets.DOMAIN_ROOT_PATH}}/public_html/vue
#           mv  -v ${{secrets.DOMAIN_ROOT_PATH}}/public_html/vue/dist/* ${{secrets.DOMAIN_ROOT_PATH}}/public_html/vue/
#           rm -rf ${{secrets.DOMAIN_ROOT_PATH}}/public_html/build.zip
#         host: ${{secrets.SSH_HOST}}
#         username: ${{secrets.SSH_USERNAME}}
# #         passphrase: ${{secrets.SSH_PASSWORD}}
#         privateKey: ${{secrets.SSH_PRIVATE_KEY}}
#         port: ${{secrets.SSH_PORT}}
